---
- hosts: all
  become: yes
  gather_facts: false
  vars:
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
    docker_images:
      - chanduj/traveltrails_frontend:latest
      - chanduj/traveltrails_backend:latest
      - mongo:4.4.25
  tasks:
    - name: Install Docker packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      tags:
        - docker

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags:
        - docker

    - name: Verify that we have the key with the fingerprint
      apt_key:
        id: 0EBFCD88
        state: present
      tags:
        - docker

    - name: Set up the stable repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
        update_cache: yes
      tags:
        - docker

    - name: Update apt packages
      apt:
        update_cache: yes
      tags:
        - docker

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      tags:
        - docker

    - name: Add remote "ubuntu" user to "docker" group
      user:
        name: "ubuntu"
        group: "docker"
        append: yes
      tags:
        - docker

    - name: Pull required Docker images
      docker_image:
        name: "{{ item }}"
      with_items: "{{ docker_images }}"
      tags:
        - docker

    - name: Create MongoDB volume
      docker_volume:
        name: mongo-data
      tags:
        - docker

    - name: Run MongoDB container
      docker_container:
        name: mongo
        image: mongo:4.4.25
        state: started
        ports:
          - "27017:27017"
        volumes:
          - "mongo-data:/data/db"
      tags:
        - docker

    - name: Run backend container
      docker_container:
        name: backend
        image: chanduj/traveltrails_backend:latest
        state: started
        ports:
          - "4000:4000"
        links:
          - "mongo:mongo"
      tags:
        - docker

    - name: Run frontend container
      docker_container:
        name: frontend
        image: chanduj/traveltrails_frontend:latest
        state: started
        ports:
          - "3000:3000"
        links:
          - "backend:backend"
      tags:
        - docker
